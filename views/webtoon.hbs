
<h1>
    {{#if previous}}
    <a href="/c/{{previous}}" class="pure-button previous-button">&lt;</a>
    {{/if}}
    {{#if next}}
    <a href="/c/{{next}}" class="pure-button next-button">&gt;</a>
    {{/if}}
    {{title}}
</h1>
<ul class="page-list">
    {{#each pages}}
    <li><img src="{{this}}" class="pure-img" alt="Page {{@index}}"/></li>
    {{/each}}
</ul>
<h1>
    {{#if previous}}
    <a href="/c/{{previous}}" class="pure-button previous-button">&lt;</a>
    {{/if}}
    {{#if next}}
    <a href="/c/{{next}}" class="pure-button next-button">&gt;</a>
    {{/if}}
    {{title}}
</h1>
<div class="arrow-left">
    &rarr;
</div>
<div class="arrow-right">
    &larr;
</div>

<script>
    $(function() {
        var next = function() {
            var btn = $('.next-button');
            if (btn.length) btn[0].click();
        };
        var previous = function() {
            var btn = $('.previous-button');
            if (btn.length) btn[0].click();
        };

        // -- Arrow navigation
        // Navigate through the chapters based on arrow keys
        document.onkeydown = function (e) {
            e = e || window.event;

            if (e.keyCode === 37) {
                previous();
            } else if (e.keyCode === 39) {
                next();
            }
        };

        // -- Fancy swipe navigation
        // Record some window properties on resizes
        var viewport, desiredDistance = null;
        var setProps = function() {
            viewport = $(window).width();
            desiredDistance = (viewport < 400 ? 0.35 : 0.25) * viewport;
        };
        setProps();
        $(window).resize(_.debounce(setProps, 80));

        // Grab hold of the arrows for later
        $leftArrow = $('.arrow-left');
        $rightArrow = $('.arrow-right');

        // Navigate through the chapters based on swiping
        var hammer = new Hammer($('html')[0], ['pan']);
        hammer.on('panleft panright', function(ev) {
            if (!ev) return;

            if (!ev.isFinal) {
                // Animate the pulls
                var pullDistance = 1 - Math.min(ev.distance / desiredDistance, 1);
                if (pullDistance < 0.9) {
                    if (ev.type === 'panleft') {
                        $rightArrow.css('right', '-' + pullDistance + 'em');
                        $leftArrow.css('left', '');
                    } else {
                        $leftArrow.css('left', '-' + pullDistance + 'em');
                        $rightArrow.css('right', '');
                    }
                }
            } else {
                // See if we had a valid swipe
                var angle = Math.abs(ev.angle);
                if (ev.distance >= desiredDistance && (angle > 160 || angle < 20)) {
                    if (ev.type === 'panleft') {
                        next();
                    } else {
                        previous();
                    }
                } else {
                    $rightArrow.css('right', '');
                    $leftArrow.css('left', '');
                }
            }
        });
    });
</script>
